{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_rewardToken",
          "type": "address"
        },
        {
          "internalType": "contract IFlywheelRewards",
          "name": "_flywheelRewards",
          "type": "address"
        },
        {
          "internalType": "contract IFlywheelBooster",
          "name": "_flywheelBooster",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "contract Authority",
          "name": "_authority",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardsDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardsIndex",
          "type": "uint256"
        }
      ],
      "name": "AccrueRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newStrategy",
          "type": "address"
        }
      ],
      "name": "AddStrategy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimRewards",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newBooster",
          "type": "address"
        }
      ],
      "name": "FlywheelBoosterUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newFlywheelRewards",
          "type": "address"
        }
      ],
      "name": "FlywheelRewardsUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ONE",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "accrue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "secondUser",
          "type": "address"
        }
      ],
      "name": "accrue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "addStrategyForRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allStrategies",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "claimRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flywheelBooster",
      "outputs": [
        {
          "internalType": "contract IFlywheelBooster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flywheelRewards",
      "outputs": [
        {
          "internalType": "contract IFlywheelRewards",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllStrategies",
      "outputs": [
        {
          "internalType": "contract ERC20[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewardsAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlywheelBooster",
          "name": "newBooster",
          "type": "address"
        }
      ],
      "name": "setBooster",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IFlywheelRewards",
          "name": "newFlywheelRewards",
          "type": "address"
        }
      ],
      "name": "setFlywheelRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "lastUpdatedTimestamp",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userIndex",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50604051620014a4380380620014a4833981016040819052620000349162000119565b600080546001600160a01b03199081166001600160a01b0385811691821784556001805490931690851617909155604051849284929133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7691a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050506001600160a01b0393841660805250600380549284166001600160a01b03199384161790556004805491909316911617905562000199565b6001600160a01b03811681146200011657600080fd5b50565b600080600080600060a086880312156200013257600080fd5b85516200013f8162000100565b6020870151909550620001528162000100565b6040870151909450620001658162000100565b6060870151909350620001788162000100565b60808701519092506200018b8162000100565b809150509295509295909350565b6080516112da620001ca60003960008181610350015281816105f30152818161067701526108b901526112da6000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea2646970667358221220024439ef29bb2d3fb50a0e0fe5e0013a6f793d01068cc32a57e4f33929deeeca64736f6c634300080a0033",
    "sourceMap": "1471:9133:9:-:0;;;1982:342;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;671:5:2;:14;;-1:-1:-1;;;;;;671:14:2;;;-1:-1:-1;;;;;671:14:2;;;;;;;;-1:-1:-1;695:22:2;;;;;;;;;;;;733:32;;671:14;;695:22;;671:14;746:10;;733:32;;;780:40;;-1:-1:-1;;;;;780:40:2;;;797:10;;780:40;;;;;-1:-1:-1;;;;;;;;2203:26:9;;::::1;;::::0;-1:-1:-1;2239:15:9::1;:34:::0;;;;::::1;-1:-1:-1::0;;;;;;2239:34:9;;::::1;;::::0;;2283:15:::1;:34:::0;;;;;::::1;::::0;::::1;;::::0;;1471:9133;;14:138:29;-1:-1:-1;;;;;96:31:29;;86:42;;76:70;;142:1;139;132:12;76:70;14:138;:::o;157:906::-;345:6;353;361;369;377;430:3;418:9;409:7;405:23;401:33;398:53;;;447:1;444;437:12;398:53;479:9;473:16;498:38;530:5;498:38;:::i;:::-;605:2;590:18;;584:25;555:5;;-1:-1:-1;618:40:29;584:25;618:40;:::i;:::-;729:2;714:18;;708:25;677:7;;-1:-1:-1;742:40:29;708:25;742:40;:::i;:::-;853:2;838:18;;832:25;801:7;;-1:-1:-1;866:40:29;832:25;866:40;:::i;:::-;977:3;962:19;;956:26;925:7;;-1:-1:-1;991:40:29;956:26;991:40;:::i;:::-;1050:7;1040:17;;;157:906;;;;;;;;:::o;:::-;1471:9133:9;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c8063b9be44ac116100ad578063dde684a511610071578063dde684a5146102b6578063e1e3dfeb14610312578063ef5cfb8c14610325578063f046ee5c14610338578063f7c618c11461034b57600080fd5b8063b9be44ac14610244578063bf7e214f14610257578063c2ee3a081461026a578063c3b2886414610279578063cc6bc1011461028e57600080fd5b80637a9e5e4b116100f45780637a9e5e4b146101b25780637fb5ad38146101c55780638da5cb5b146101f35780638fb009131461021e578063ab5497d71461023157600080fd5b8063116139d31461012657806313af4035146101775780635a826df31461018c578063715cad161461019f575b600080fd5b61015a610134366004611046565b60076020908152600092835260408084209091529082529020546001600160e01b031681565b6040516001600160e01b0390911681526020015b60405180910390f35b61018a61018536600461107f565b610372565b005b61018a61019a36600461107f565b6103f8565b61018a6101ad36600461107f565b610474565b61018a6101c036600461107f565b6104b2565b6101e56101d336600461107f565b60056020526000908152604090205481565b60405190815260200161016e565b600054610206906001600160a01b031681565b6040516001600160a01b03909116815260200161016e565b61018a61022c36600461107f565b61059c565b600454610206906001600160a01b031681565b6101e5610252366004611046565b6106ec565b600154610206906001600160a01b031681565b61015a670de0b6b3a764000081565b610281610762565b60405161016e91906110a3565b6102a161029c3660046110f0565b6107c4565b6040805192835260208301919091520161016e565b6102ee6102c436600461107f565b6006602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b604080516001600160e01b03909316835263ffffffff90911660208301520161016e565b61020661032036600461113b565b61084d565b61018a61033336600461107f565b610877565b600354610206906001600160a01b031681565b6102067f000000000000000000000000000000000000000000000000000000000000000081565b610388336000356001600160e01b03191661092b565b6103ad5760405162461bcd60e51b81526004016103a490611154565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b61040e336000356001600160e01b03191661092b565b61042a5760405162461bcd60e51b81526004016103a490611154565b600480546001600160a01b0319166001600160a01b0383169081179091556040517ff2fb4350e8466c152b500f8e58c0c23f01bbc332dc82f5375267e70b5f50f19990600090a250565b61048a336000356001600160e01b03191661092b565b6104a65760405162461bcd60e51b81526004016103a490611154565b6104af816109d5565b50565b6000546001600160a01b0316331480610547575060015460405163b700961360e01b81526001600160a01b039091169063b70096139061050690339030906001600160e01b0319600035169060040161117a565b602060405180830381865afa158015610523573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054791906111a7565b61055057600080fd5b600180546001600160a01b0319166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6105b2336000356001600160e01b03191661092b565b6105ce5760405162461bcd60e51b81526004016103a490611154565b6003546040516370a0823160e01b81526001600160a01b0391821660048201526000917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065e91906111c9565b905080156106a1576003546106a1906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b600380546001600160a01b0319166001600160a01b0384169081179091556040517ff1ba364f52e65f08563196b608289b1da2a923cdd0aa7e20dfe664c4ad294c9590600090a25050565b6001600160a01b03821660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff16928201929092529061074157600091505061075c565b61074b8482610b95565b9050610758848483610dd7565b9150505b92915050565b606060028054806020026020016040519081016040528092919081815260200182805480156107ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161079c575b5050505050905090565b6001600160a01b03831660009081526006602090815260408083208151808301909252546001600160e01b038116808352600160e01b90910463ffffffff1692820192909252829161081d576000809250925050610845565b6108278682610b95565b9050610834868683610dd7565b61083f878684610dd7565b92509250505b935093915050565b6002818154811061085d57600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0381166000908152600560205260409020548015610927576001600160a01b038083166000908152600560205260408120556003546108e3917f0000000000000000000000000000000000000000000000000000000000000000811691168484610b0b565b816001600160a01b03167f1f89f96333d3133000ee447473151fa9606543368f02271c9d95ae14f13bcc678260405161091e91815260200190565b60405180910390a25b5050565b6001546000906001600160a01b031680158015906109b5575060405163b700961360e01b81526001600160a01b0382169063b7009613906109749087903090889060040161117a565b602060405180830381865afa158015610991573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b591906111a7565b8061075857506000546001600160a01b0385811691161491505092915050565b6001600160a01b0381166000908152600660205260409020546001600160e01b031615610a2f5760405162461bcd60e51b8152602060048201526008602482015267737472617465677960c01b60448201526064016103a4565b6040518060400160405280670de0b6b3a76400006001600160e01b03168152602001610a5a42611008565b63ffffffff9081169091526001600160a01b038316600081815260066020908152604080832086519690920151909416600160e01b026001600160e01b0390951694909417909355600280546001810182559084527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191682179055905190917f69887873d46778fb35539b0a9992d9176ca03c1820b0afb538bc3a6f63326b1091a250565b60006040516323b872dd60e01b81528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610b8e5760405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b60448201526064016103a4565b5050505050565b6040805180820190915260008082526020820152600354602083015160405163b334db7b60e01b81526001600160a01b03868116600483015263ffffffff9092166024820152600092919091169063b334db7b906044016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906111c9565b83925090508015610dd0576004546000906001600160a01b0316610cb457846001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610caf91906111c9565b610d24565b60048054604051631e1932fb60e01b81526001600160a01b0388811693820193909352911690631e1932fb90602401602060405180830381865afa158015610d00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d2491906111c9565b905060008115610d5657610d5382610d44670de0b6b3a7640000866111f8565b610d4e9190611217565b61101f565b90505b6040518060400160405280828760000151610d719190611239565b6001600160e01b03168152602001610d8842611008565b63ffffffff9081169091526001600160a01b0388166000908152600660209081526040909120835191840151909216600160e01b026001600160e01b03909116179055935050505b5092915050565b80516001600160a01b038481166000908152600760209081526040808320938716835292905290812080546001600160e01b038085166001600160e01b03198316179092559192911680610e305750670de0b6b3a76400005b6000610e3c8284611264565b6004549091506000906001600160a01b0316610ec1576040516370a0823160e01b81526001600160a01b0388811660048301528916906370a0823190602401602060405180830381865afa158015610e98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ebc91906111c9565b610f39565b60048054604051631a50ef2f60e01b81526001600160a01b038b8116938201939093528983166024820152911690631a50ef2f90604401602060405180830381865afa158015610f15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3991906111c9565b90506000670de0b6b3a7640000610f596001600160e01b038516846111f8565b610f639190611217565b6001600160a01b03891660009081526005602052604081205491925090610f8b90839061128c565b6001600160a01b03808b16600081815260056020526040908190208490555192935091908c16907f35a61f3c719e8f59f636c336e563ba74f667fadafcc80d709231ca8bb59eecce90610ff39086908b909182526001600160e01b0316602082015260400190565b60405180910390a39998505050505050505050565b6000640100000000821061101b57600080fd5b5090565b6000600160e01b821061101b57600080fd5b6001600160a01b03811681146104af57600080fd5b6000806040838503121561105957600080fd5b823561106481611031565b9150602083013561107481611031565b809150509250929050565b60006020828403121561109157600080fd5b813561109c81611031565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156110e45783516001600160a01b0316835292840192918401916001016110bf565b50909695505050505050565b60008060006060848603121561110557600080fd5b833561111081611031565b9250602084013561112081611031565b9150604084013561113081611031565b809150509250925092565b60006020828403121561114d57600080fd5b5035919050565b6020808252600c908201526b15539055551213d49256915160a21b604082015260600190565b6001600160a01b0393841681529190921660208201526001600160e01b0319909116604082015260600190565b6000602082840312156111b957600080fd5b8151801515811461109c57600080fd5b6000602082840312156111db57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615611212576112126111e2565b500290565b60008261123457634e487b7160e01b600052601260045260246000fd5b500490565b60006001600160e01b0382811684821680830382111561125b5761125b6111e2565b01949350505050565b60006001600160e01b0383811690831681811015611284576112846111e2565b039392505050565b6000821982111561129f5761129f6111e2565b50019056fea2646970667358221220024439ef29bb2d3fb50a0e0fe5e0013a6f793d01068cc32a57e4f33929deeeca64736f6c634300080a0033",
    "sourceMap": "1471:9133:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7918:62;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7918:62:9;;;;;;-1:-1:-1;;;;;742:32:29;;;724:51;;712:2;697:18;7918:62:9;;;;;;;;1936:147:2;;;;;;:::i;:::-;;:::i;:::-;;7086:174:9;;;;;;:::i;:::-;;:::i;5575:118::-;;;;;;:::i;:::-;;:::i;1496:434:2:-;;;;;;:::i;:::-;;:::i;3253:49:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2025:25:29;;;2013:2;1998:18;3253:49:9;1879:177:29;551:20:2;;;;;-1:-1:-1;;;;;551:20:2;;;;;;-1:-1:-1;;;;;2225:32:29;;;2207:51;;2195:2;2180:18;551:20:2;2061:203:29;6394:452:9;;;;;;:::i;:::-;;:::i;1936:39::-;;;;;-1:-1:-1;;;;;1936:39:9;;;3573:280;;;;;;:::i;:::-;;:::i;578:26:2:-;;;;;-1:-1:-1;;;;;578:26:2;;;7714:34:9;;7744:4;7714:34;;6034:104;;;:::i;:::-;;;;;;;:::i;4277:387::-;;;;;;:::i;:::-;;:::i;:::-;;;;4432:25:29;;;4488:2;4473:18;;4466:34;;;;4405:18;4277:387:9;4258:248:29;7820:51:9;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;7820:51:9;;;-1:-1:-1;;;7820:51:9;;;;;;;;;;-1:-1:-1;;;;;4701:32:29;;;4683:51;;4782:10;4770:23;;;4765:2;4750:18;;4743:51;4656:18;7820:51:9;4511:289:29;1710:28:9;;;;;;:::i;:::-;;:::i;4848:308::-;;;;;;:::i;:::-;;:::i;1803:39::-;;;;;-1:-1:-1;;;;;1803:39:9;;;1616:34;;;;;1936:147:2;875:33;888:10;900:7;;-1:-1:-1;;;;;;900:7:2;875:12;:33::i;:::-;867:58;;;;-1:-1:-1;;;867:58:2;;;;;;;:::i;:::-;;;;;;;;;2010:5:::1;:16:::0;;-1:-1:-1;;;;;;2010:16:2::1;-1:-1:-1::0;;;;;2010:16:2;::::1;::::0;;::::1;::::0;;2042:34:::1;::::0;2010:16;;2055:10:::1;::::0;2042:34:::1;::::0;2010:5;2042:34:::1;1936:147:::0;:::o;7086:174:9:-;875:33:2;888:10;900:7;;-1:-1:-1;;;;;;900:7:2;875:12;:33::i;:::-;867:58;;;;-1:-1:-1;;;867:58:2;;;;;;;:::i;:::-;7167:15:9::1;:28:::0;;-1:-1:-1;;;;;;7167:28:9::1;-1:-1:-1::0;;;;;7167:28:9;::::1;::::0;;::::1;::::0;;;7211:42:::1;::::0;::::1;::::0;-1:-1:-1;;7211:42:9::1;7086:174:::0;:::o;5575:118::-;875:33:2;888:10;900:7;;-1:-1:-1;;;;;;900:7:2;875:12;:33::i;:::-;867:58;;;;-1:-1:-1;;;867:58:2;;;;;;;:::i;:::-;5654:32:9::1;5677:8;5654:22;:32::i;:::-;5575:118:::0;:::o;1496:434:2:-;1767:5;;-1:-1:-1;;;;;1767:5:2;1753:10;:19;;:76;;-1:-1:-1;1776:9:2;;:53;;-1:-1:-1;;;1776:53:2;;-1:-1:-1;;;;;1776:9:2;;;;:17;;:53;;1794:10;;1814:4;;-1:-1:-1;;;;;;1776:9:2;1821:7;;;1776:53;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1745:85;;;;;;1841:9;:24;;-1:-1:-1;;;;;;1841:24:2;-1:-1:-1;;;;;1841:24:2;;;;;;;;1881:42;;1898:10;;1881:42;;-1:-1:-1;;1881:42:2;1496:434;:::o;6394:452:9:-;875:33:2;888:10;900:7;;-1:-1:-1;;;;;;900:7:2;875:12;:33::i;:::-;867:58;;;;-1:-1:-1;;;867:58:2;;;;;;;:::i;:::-;6548:15:9::1;::::0;6518:47:::1;::::0;-1:-1:-1;;;6518:47:9;;-1:-1:-1;;;;;6548:15:9;;::::1;6518:47;::::0;::::1;2207:51:29::0;6491:24:9::1;::::0;6518:11:::1;:21;::::0;::::1;::::0;2180:18:29;;6518:47:9::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6491:74:::0;-1:-1:-1;6579:20:9;;6575:152:::1;;6652:15;::::0;6615:101:::1;::::0;-1:-1:-1;;;;;6615:11:9::1;:28:::0;::::1;::::0;6652:15:::1;6678:18:::0;6699:16;6615:28:::1;:101::i;:::-;6737:15;:36:::0;;-1:-1:-1;;;;;;6737:36:9::1;-1:-1:-1::0;;;;;6737:36:9;::::1;::::0;;::::1;::::0;;;6789:50:::1;::::0;::::1;::::0;-1:-1:-1;;6789:50:9::1;6481:365;6394:452:::0;:::o;3573:280::-;-1:-1:-1;;;;;3682:23:9;;3635:7;3682:23;;;:13;:23;;;;;;;;3654:51;;;;;;;;;-1:-1:-1;;;;;3654:51:9;;;;;-1:-1:-1;;;3654:51:9;;;;;;;;;;;;;3716:30;;3745:1;3738:8;;;;;3716:30;3765:31;3780:8;3790:5;3765:14;:31::i;:::-;3757:39;;3813:33;3824:8;3834:4;3840:5;3813:10;:33::i;:::-;3806:40;;;3573:280;;;;;:::o;6034:104::-;6085:14;6118:13;6111:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6111:20:9;;;;;;;;;;;;;;;;;;;;;;;6034:104;:::o;4277:387::-;-1:-1:-1;;;;;4445:23:9;;4389:7;4445:23;;;:13;:23;;;;;;;;4417:51;;;;;;;;;-1:-1:-1;;;;;4417:51:9;;;;;-1:-1:-1;;;4417:51:9;;;;;;;;;;;;4389:7;;4479:35;;4509:1;4512;4501:13;;;;;;;4479:35;4533:31;4548:8;4558:5;4533:14;:31::i;:::-;4525:39;;4582:33;4593:8;4603:4;4609:5;4582:10;:33::i;:::-;4617:39;4628:8;4638:10;4650:5;4617:10;:39::i;:::-;4574:83;;;;;4277:387;;;;;;;:::o;1710:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1710:28:9;;-1:-1:-1;1710:28:9;:::o;4848:308::-;-1:-1:-1;;;;;4921:20:9;;4903:15;4921:20;;;:14;:20;;;;;;4956:12;;4952:198;;-1:-1:-1;;;;;4984:20:9;;;5007:1;4984:20;;;:14;:20;;;;;:24;5060:15;;5023:69;;:11;:28;;;5060:15;4999:4;5084:7;5023:28;:69::i;:::-;5125:4;-1:-1:-1;;;;;5112:27:9;;5131:7;5112:27;;;;2025:25:29;;2013:2;1998:18;;1879:177;5112:27:9;;;;;;;;4952:198;4893:263;4848:308;:::o;950:540:2:-;1070:9;;1037:4;;-1:-1:-1;;;;;1070:9:2;1388:27;;;;;:77;;-1:-1:-1;1419:46:2;;-1:-1:-1;;;1419:46:2;;-1:-1:-1;;;;;1419:12:2;;;;;:46;;1432:4;;1446;;1453:11;;1419:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1387:96;;;-1:-1:-1;1478:5:2;;-1:-1:-1;;;;;1470:13:2;;;1478:5;;1470:13;1380:103;;;950:540;;;;:::o;5699:329:9:-;-1:-1:-1;;;;;5774:23:9;;;;;;:13;:23;;;;;:29;-1:-1:-1;;;;;5774:29:9;:34;5766:55;;;;-1:-1:-1;;;5766:55:9;;6864:2:29;5766:55:9;;;6846:21:29;6903:1;6883:18;;;6876:29;-1:-1:-1;;;6921:18:29;;;6914:38;6969:18;;5766:55:9;6662:331:29;5766:55:9;5857:80;;;;;;;;7744:4;-1:-1:-1;;;;;5857:80:9;;;;;5905:30;:15;:28;:30::i;:::-;5857:80;;;;;;;-1:-1:-1;;;;;5831:23:9;;;;;;:13;:23;;;;;;;;:106;;;;;;;;;;-1:-1:-1;;;5831:106:9;-1:-1:-1;;;;;5831:106:9;;;;;;;;;;5948:13;:28;;5831:106;5948:28;;;;;;;;;;;-1:-1:-1;;;;;;5948:28:9;;;;;5991:30;;5831:23;;5991:30;;;5699:329;:::o;1337:1573:8:-;1475:12;1602:4;1596:11;-1:-1:-1;;;1725:17:8;1718:93;1858:4;1854:1;1835:17;1831:25;1824:39;1942:2;1937;1918:17;1914:26;1907:38;2022:6;2017:2;1998:17;1994:26;1987:42;2826:2;2823:1;2818:3;2799:17;2796:1;2789:5;2782;2777:52;2345:16;2338:24;2332:2;2314:16;2311:24;2307:1;2303;2297:8;2294:15;2290:46;2287:76;2087:756;2076:767;;;2871:7;2863:40;;;;-1:-1:-1;;;2863:40:8;;7200:2:29;2863:40:8;;;7182:21:29;7239:2;7219:18;;;7212:30;-1:-1:-1;;;7258:18:29;;;7251:50;7318:18;;2863:40:8;6998:344:29;2863:40:8;1465:1445;1337:1573;;;;:::o;8043:1127:9:-;-1:-1:-1;;;;;;;;;;;;;;;;;8276:15:9;;8320:26;;;;8276:71;;-1:-1:-1;;;8276:71:9;;-1:-1:-1;;;;;7551:32:29;;;8276:71:9;;;7533:51:29;7632:10;7620:23;;;7600:18;;;7593:51;8243:30:9;;8276:15;;;;;:33;;7506:18:29;;8276:71:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8373:5;;-1:-1:-1;8243:104:9;-1:-1:-1;8392:26:9;;8388:776;;8550:15;;8519:20;;-1:-1:-1;;;;;8550:15:9;8542:142;;8662:8;-1:-1:-1;;;;;8662:20:9;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8542:142;;;8599:15;;;:44;;-1:-1:-1;;;8599:44:9;;-1:-1:-1;;;;;2225:32:29;;;8599:44:9;;;2207:51:29;;;;8599:15:9;;;:34;;2180:18:29;;8599:44:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8519:165;-1:-1:-1;8699:18:9;8736:17;;8732:99;;8768:63;8802:12;8770:28;7744:4;8770:22;:28;:::i;:::-;8769:45;;;;:::i;:::-;8768:61;:63::i;:::-;8755:76;;8732:99;8954:147;;;;;;;;9006:10;8992:5;:11;;;:24;;;;:::i;:::-;-1:-1:-1;;;;;8954:147:9;;;;;9056:30;:15;:28;:30::i;:::-;8954:147;;;;;;;-1:-1:-1;;;;;9115:23:9;;;;;;:13;:23;;;;;;;;:38;;;;;;;;;-1:-1:-1;;;9115:38:9;-1:-1:-1;;;;;9115:38:9;;;;;;8939:162;-1:-1:-1;;;8388:776:9;8181:989;8043:1127;;;;:::o;9245:1357::-;9436:11;;-1:-1:-1;;;;;9481:19:9;;;9369:7;9481:19;;;:9;:19;;;;;;;;:25;;;;;;;;;;;;;-1:-1:-1;;;;;9554:41:9;;;-1:-1:-1;;;;;;9554:41:9;;;;;;9369:7;;9436:11;9481:25;;9804:68;;-1:-1:-1;7744:4:9;9804:68;9882:18;9903:29;9919:13;9903;:29;:::i;:::-;10058:15;;9882:50;;-1:-1:-1;10025:22:9;;-1:-1:-1;;;;;10058:15:9;10050:140;;10166:24;;-1:-1:-1;;;10166:24:9;;-1:-1:-1;;;;;2225:32:29;;;10166:24:9;;;2207:51:29;10166:18:9;;;;;2180::29;;10166:24:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10050:140;;;10103:15;;;:48;;-1:-1:-1;;;10103:48:9;;-1:-1:-1;;;;;8905:15:29;;;10103:48:9;;;8887:34:29;;;;8957:15;;;8937:18;;;8930:43;10103:15:9;;;:32;;8822:18:29;;10103:48:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10025:165;-1:-1:-1;10307:21:9;7744:4;10332:27;-1:-1:-1;;;;;10332:27:9;;10025:165;10332:27;:::i;:::-;10331:35;;;;:::i;:::-;-1:-1:-1;;;;;10402:20:9;;10376:23;10402:20;;;:14;:20;;;;;;10307:59;;-1:-1:-1;10376:23:9;10402:36;;10307:59;;10402:36;:::i;:::-;-1:-1:-1;;;;;10449:20:9;;;;;;;:14;:20;;;;;;;:38;;;10503:59;10376:62;;-1:-1:-1;10449:20:9;10503:59;;;;;;;;10533:13;;10548;;9291:25:29;;;-1:-1:-1;;;;;9352:32:29;9347:2;9332:18;;9325:60;9279:2;9264:18;;9117:274;10503:59:9;;;;;;;;10580:15;9245:1357;-1:-1:-1;;;;;;;;;9245:1357:9:o;1361:127:7:-;1417:8;1449:7;1445:1;:11;1437:20;;;;;;-1:-1:-1;1479:1:7;1361:127::o;547:131::-;604:9;-1:-1:-1;;;633:1:7;:12;625:21;;;;;14:138:29;-1:-1:-1;;;;;96:31:29;;86:42;;76:70;;142:1;139;132:12;157:416;239:6;247;300:2;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;355:9;342:23;374:38;406:5;374:38;:::i;:::-;431:5;-1:-1:-1;488:2:29;473:18;;460:32;501:40;460:32;501:40;:::i;:::-;560:7;550:17;;;157:416;;;;;:::o;786:254::-;845:6;898:2;886:9;877:7;873:23;869:32;866:52;;;914:1;911;904:12;866:52;953:9;940:23;972:38;1004:5;972:38;:::i;:::-;1029:5;786:254;-1:-1:-1;;;786:254:29:o;3012:672::-;3197:2;3249:21;;;3319:13;;3222:18;;;3341:22;;;3168:4;;3197:2;3420:15;;;;3394:2;3379:18;;;3168:4;3463:195;3477:6;3474:1;3471:13;3463:195;;;3542:13;;-1:-1:-1;;;;;3538:39:29;3526:52;;3633:15;;;;3598:12;;;;3574:1;3492:9;3463:195;;;-1:-1:-1;3675:3:29;;3012:672;-1:-1:-1;;;;;;3012:672:29:o;3689:564::-;3780:6;3788;3796;3849:2;3837:9;3828:7;3824:23;3820:32;3817:52;;;3865:1;3862;3855:12;3817:52;3904:9;3891:23;3923:38;3955:5;3923:38;:::i;:::-;3980:5;-1:-1:-1;4037:2:29;4022:18;;4009:32;4050:40;4009:32;4050:40;:::i;:::-;4109:7;-1:-1:-1;4168:2:29;4153:18;;4140:32;4181:40;4140:32;4181:40;:::i;:::-;4240:7;4230:17;;;3689:564;;;;;:::o;4805:180::-;4864:6;4917:2;4905:9;4896:7;4892:23;4888:32;4885:52;;;4933:1;4930;4923:12;4885:52;-1:-1:-1;4956:23:29;;4805:180;-1:-1:-1;4805:180:29:o;5445:336::-;5647:2;5629:21;;;5686:2;5666:18;;;5659:30;-1:-1:-1;;;5720:2:29;5705:18;;5698:42;5772:2;5757:18;;5445:336::o;5786:400::-;-1:-1:-1;;;;;6042:15:29;;;6024:34;;6094:15;;;;6089:2;6074:18;;6067:43;-1:-1:-1;;;;;;6146:33:29;;;6141:2;6126:18;;6119:61;5974:2;5959:18;;5786:400::o;6191:277::-;6258:6;6311:2;6299:9;6290:7;6286:23;6282:32;6279:52;;;6327:1;6324;6317:12;6279:52;6359:9;6353:16;6412:5;6405:13;6398:21;6391:5;6388:32;6378:60;;6434:1;6431;6424:12;6473:184;6543:6;6596:2;6584:9;6575:7;6571:23;6567:32;6564:52;;;6612:1;6609;6602:12;6564:52;-1:-1:-1;6635:16:29;;6473:184;-1:-1:-1;6473:184:29:o;7655:127::-;7716:10;7711:3;7707:20;7704:1;7697:31;7747:4;7744:1;7737:15;7771:4;7768:1;7761:15;7787:168;7827:7;7893:1;7889;7885:6;7881:14;7878:1;7875:21;7870:1;7863:9;7856:17;7852:45;7849:71;;;7900:18;;:::i;:::-;-1:-1:-1;7940:9:29;;7787:168::o;7960:217::-;8000:1;8026;8016:132;;8070:10;8065:3;8061:20;8058:1;8051:31;8105:4;8102:1;8095:15;8133:4;8130:1;8123:15;8016:132;-1:-1:-1;8162:9:29;;7960:217::o;8182:238::-;8222:3;-1:-1:-1;;;;;8289:10:29;;;8319;;;8349:12;;;8341:21;;8338:47;;;8365:18;;:::i;:::-;8401:13;;8182:238;-1:-1:-1;;;;8182:238:29:o;8425:231::-;8465:4;-1:-1:-1;;;;;8563:10:29;;;;8533;;8585:12;;;8582:38;;;8600:18;;:::i;:::-;8637:13;;8425:231;-1:-1:-1;;;8425:231:29:o;8984:128::-;9024:3;9055:1;9051:6;9048:1;9045:13;9042:39;;;9061:18;;:::i;:::-;-1:-1:-1;9097:9:29;;8984:128::o",
    "linkReferences": {},
    "immutableReferences": {
      "3969": [
        {
          "start": 848,
          "length": 32
        },
        {
          "start": 1523,
          "length": 32
        },
        {
          "start": 1655,
          "length": 32
        },
        {
          "start": 2233,
          "length": 32
        }
      ]
    }
  },
  "ast": {
    "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/src/FlywheelCore.sol",
    "id": 4545,
    "exportedSymbols": {
      "Auth": [
        2438
      ],
      "Authority": [
        2451
      ],
      "ERC20": [
        3636
      ],
      "FlywheelCore": [
        4544
      ],
      "IFlywheelBooster": [
        4577
      ],
      "IFlywheelRewards": [
        4610
      ],
      "SafeCastLib": [
        3847
      ],
      "SafeTransferLib": [
        3940
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:10563:9",
    "nodes": [
      {
        "id": 3942,
        "nodeType": "PragmaDirective",
        "src": "42:23:9",
        "literals": [
          "solidity",
          "0.8",
          ".10"
        ]
      },
      {
        "id": 3944,
        "nodeType": "ImportDirective",
        "src": "67:47:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/lib/solmate/src/tokens/ERC20.sol",
        "file": "solmate/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 3637,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3943,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "75:5:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3947,
        "nodeType": "ImportDirective",
        "src": "115:54:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 2452,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3945,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "123:4:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 3946,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "129:9:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3949,
        "nodeType": "ImportDirective",
        "src": "170:66:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/lib/solmate/src/utils/SafeTransferLib.sol",
        "file": "solmate/utils/SafeTransferLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 3941,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3948,
              "name": "SafeTransferLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "178:15:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3951,
        "nodeType": "ImportDirective",
        "src": "237:58:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/lib/solmate/src/utils/SafeCastLib.sol",
        "file": "solmate/utils/SafeCastLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 3848,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3950,
              "name": "SafeCastLib",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "245:11:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3953,
        "nodeType": "ImportDirective",
        "src": "297:67:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/src/interfaces/IFlywheelRewards.sol",
        "file": "./interfaces/IFlywheelRewards.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 4611,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3952,
              "name": "IFlywheelRewards",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "305:16:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3955,
        "nodeType": "ImportDirective",
        "src": "365:67:9",
        "absolutePath": "/Users/cryptickoan/Documents/Work/Flywheel/flywheel-v2/src/interfaces/IFlywheelBooster.sol",
        "file": "./interfaces/IFlywheelBooster.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 4545,
        "sourceUnit": 4578,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3954,
              "name": "IFlywheelBooster",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "373:16:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 4544,
        "nodeType": "ContractDefinition",
        "src": "1471:9133:9",
        "nodes": [
          {
            "id": 3962,
            "nodeType": "UsingForDirective",
            "src": "1507:32:9",
            "libraryName": {
              "id": 3959,
              "name": "SafeTransferLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3940,
              "src": "1513:15:9"
            },
            "typeName": {
              "id": 3961,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3960,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3636,
                "src": "1533:5:9"
              },
              "referencedDeclaration": 3636,
              "src": "1533:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3636",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 3965,
            "nodeType": "UsingForDirective",
            "src": "1544:30:9",
            "libraryName": {
              "id": 3963,
              "name": "SafeCastLib",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3847,
              "src": "1550:11:9"
            },
            "typeName": {
              "id": 3964,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1566:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 3969,
            "nodeType": "VariableDeclaration",
            "src": "1616:34:9",
            "constant": false,
            "documentation": {
              "id": 3966,
              "nodeType": "StructuredDocumentation",
              "src": "1580:31:9",
              "text": "@notice The token to reward"
            },
            "functionSelector": "f7c618c1",
            "mutability": "immutable",
            "name": "rewardToken",
            "nameLocation": "1639:11:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$3636",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 3968,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3967,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3636,
                "src": "1616:5:9"
              },
              "referencedDeclaration": 3636,
              "src": "1616:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$3636",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3974,
            "nodeType": "VariableDeclaration",
            "src": "1710:28:9",
            "constant": false,
            "documentation": {
              "id": 3970,
              "nodeType": "StructuredDocumentation",
              "src": "1657:48:9",
              "text": "@notice append-only list of strategies added"
            },
            "functionSelector": "e1e3dfeb",
            "mutability": "mutable",
            "name": "allStrategies",
            "nameLocation": "1725:13:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_storage",
              "typeString": "contract ERC20[]"
            },
            "typeName": {
              "baseType": {
                "id": 3972,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 3971,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3636,
                  "src": "1710:5:9"
                },
                "referencedDeclaration": 3636,
                "src": "1710:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$3636",
                  "typeString": "contract ERC20"
                }
              },
              "id": 3973,
              "nodeType": "ArrayTypeName",
              "src": "1710:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_storage_ptr",
                "typeString": "contract ERC20[]"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3978,
            "nodeType": "VariableDeclaration",
            "src": "1803:39:9",
            "constant": false,
            "documentation": {
              "id": 3975,
              "nodeType": "StructuredDocumentation",
              "src": "1745:53:9",
              "text": "@notice the rewards contract for managing streams"
            },
            "functionSelector": "f046ee5c",
            "mutability": "mutable",
            "name": "flywheelRewards",
            "nameLocation": "1827:15:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
              "typeString": "contract IFlywheelRewards"
            },
            "typeName": {
              "id": 3977,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3976,
                "name": "IFlywheelRewards",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4610,
                "src": "1803:16:9"
              },
              "referencedDeclaration": 4610,
              "src": "1803:16:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                "typeString": "contract IFlywheelRewards"
              }
            },
            "visibility": "public"
          },
          {
            "id": 3982,
            "nodeType": "VariableDeclaration",
            "src": "1936:39:9",
            "constant": false,
            "documentation": {
              "id": 3979,
              "nodeType": "StructuredDocumentation",
              "src": "1849:82:9",
              "text": "@notice optional booster module for calculating virtual balances on strategies"
            },
            "functionSelector": "ab5497d7",
            "mutability": "mutable",
            "name": "flywheelBooster",
            "nameLocation": "1960:15:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
              "typeString": "contract IFlywheelBooster"
            },
            "typeName": {
              "id": 3981,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3980,
                "name": "IFlywheelBooster",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4577,
                "src": "1936:16:9"
              },
              "referencedDeclaration": 4577,
              "src": "1936:16:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                "typeString": "contract IFlywheelBooster"
              }
            },
            "visibility": "public"
          },
          {
            "id": 4016,
            "nodeType": "FunctionDefinition",
            "src": "1982:342:9",
            "body": {
              "id": 4015,
              "nodeType": "Block",
              "src": "2193:131:9",
              "statements": [
                {
                  "expression": {
                    "id": 4005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4003,
                      "name": "rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3969,
                      "src": "2203:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3636",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4004,
                      "name": "_rewardToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3985,
                      "src": "2217:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3636",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "2203:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 4006,
                  "nodeType": "ExpressionStatement",
                  "src": "2203:26:9"
                },
                {
                  "expression": {
                    "id": 4009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4007,
                      "name": "flywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3978,
                      "src": "2239:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                        "typeString": "contract IFlywheelRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4008,
                      "name": "_flywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3988,
                      "src": "2257:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                        "typeString": "contract IFlywheelRewards"
                      }
                    },
                    "src": "2239:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                      "typeString": "contract IFlywheelRewards"
                    }
                  },
                  "id": 4010,
                  "nodeType": "ExpressionStatement",
                  "src": "2239:34:9"
                },
                {
                  "expression": {
                    "id": 4013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4011,
                      "name": "flywheelBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3982,
                      "src": "2283:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                        "typeString": "contract IFlywheelBooster"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4012,
                      "name": "_flywheelBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3991,
                      "src": "2301:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                        "typeString": "contract IFlywheelBooster"
                      }
                    },
                    "src": "2283:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                      "typeString": "contract IFlywheelBooster"
                    }
                  },
                  "id": 4014,
                  "nodeType": "ExpressionStatement",
                  "src": "2283:34:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3999,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3993,
                    "src": "2173:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 4000,
                    "name": "_authority",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3996,
                    "src": "2181:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2451",
                      "typeString": "contract Authority"
                    }
                  }
                ],
                "id": 4001,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3998,
                  "name": "Auth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2438,
                  "src": "2168:4:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:24:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3985,
                  "mutability": "mutable",
                  "name": "_rewardToken",
                  "nameLocation": "2009:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4016,
                  "src": "2003:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 3984,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3983,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "2003:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "2003:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3988,
                  "mutability": "mutable",
                  "name": "_flywheelRewards",
                  "nameLocation": "2048:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4016,
                  "src": "2031:33:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                    "typeString": "contract IFlywheelRewards"
                  },
                  "typeName": {
                    "id": 3987,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3986,
                      "name": "IFlywheelRewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4610,
                      "src": "2031:16:9"
                    },
                    "referencedDeclaration": 4610,
                    "src": "2031:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                      "typeString": "contract IFlywheelRewards"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3991,
                  "mutability": "mutable",
                  "name": "_flywheelBooster",
                  "nameLocation": "2091:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4016,
                  "src": "2074:33:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                    "typeString": "contract IFlywheelBooster"
                  },
                  "typeName": {
                    "id": 3990,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3989,
                      "name": "IFlywheelBooster",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4577,
                      "src": "2074:16:9"
                    },
                    "referencedDeclaration": 4577,
                    "src": "2074:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                      "typeString": "contract IFlywheelBooster"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3993,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2125:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4016,
                  "src": "2117:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3992,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2117:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3996,
                  "mutability": "mutable",
                  "name": "_authority",
                  "nameLocation": "2151:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4016,
                  "src": "2141:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Authority_$2451",
                    "typeString": "contract Authority"
                  },
                  "typeName": {
                    "id": 3995,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3994,
                      "name": "Authority",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2451,
                      "src": "2141:9:9"
                    },
                    "referencedDeclaration": 2451,
                    "src": "2141:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Authority_$2451",
                      "typeString": "contract Authority"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:174:9"
            },
            "returnParameters": {
              "id": 4002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2193:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4028,
            "nodeType": "EventDefinition",
            "src": "2834:110:9",
            "anonymous": false,
            "documentation": {
              "id": 4017,
              "nodeType": "StructuredDocumentation",
              "src": "2513:316:9",
              "text": "@notice Emitted when a user's rewards accrue to a given strategy.\n@param strategy the updated rewards strategy\n@param user the user of the rewards\n@param rewardsDelta how many new rewards accrued to the user\n@param rewardsIndex the market index for rewards per token accrued"
            },
            "name": "AccrueRewards",
            "nameLocation": "2840:13:9",
            "parameters": {
              "id": 4027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4020,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2868:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4028,
                  "src": "2854:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4019,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4018,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "2854:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "2854:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4022,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2894:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4028,
                  "src": "2878:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4021,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2878:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4024,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardsDelta",
                  "nameLocation": "2908:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4028,
                  "src": "2900:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2900:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4026,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardsIndex",
                  "nameLocation": "2930:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4028,
                  "src": "2922:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2922:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2853:90:9"
            }
          },
          {
            "id": 4035,
            "nodeType": "EventDefinition",
            "src": "3116:57:9",
            "anonymous": false,
            "documentation": {
              "id": 4029,
              "nodeType": "StructuredDocumentation",
              "src": "2950:161:9",
              "text": "@notice Emitted when a user claims accrued rewards.\n@param user the user of the rewards\n@param amount the amount of rewards claimed"
            },
            "name": "ClaimRewards",
            "nameLocation": "3122:12:9",
            "parameters": {
              "id": 4034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4031,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3151:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4035,
                  "src": "3135:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4030,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3165:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4035,
                  "src": "3157:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4032,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3157:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:38:9"
            }
          },
          {
            "id": 4040,
            "nodeType": "VariableDeclaration",
            "src": "3253:49:9",
            "constant": false,
            "documentation": {
              "id": 4036,
              "nodeType": "StructuredDocumentation",
              "src": "3179:69:9",
              "text": "@notice The accrued but not yet transferred rewards for each user"
            },
            "functionSelector": "7fb5ad38",
            "mutability": "mutable",
            "name": "rewardsAccrued",
            "nameLocation": "3288:14:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4039,
              "keyType": {
                "id": 4037,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3261:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3253:27:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4038,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3272:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4079,
            "nodeType": "FunctionDefinition",
            "src": "3573:280:9",
            "body": {
              "id": 4078,
              "nodeType": "Block",
              "src": "3644:209:9",
              "statements": [
                {
                  "assignments": [
                    4053
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4053,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "3674:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4078,
                      "src": "3654:25:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState"
                      },
                      "typeName": {
                        "id": 4052,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4051,
                          "name": "RewardsState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4329,
                          "src": "3654:12:9"
                        },
                        "referencedDeclaration": 4329,
                        "src": "3654:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                          "typeString": "struct FlywheelCore.RewardsState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4057,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4054,
                      "name": "strategyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4340,
                      "src": "3682:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                        "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState storage ref)"
                      }
                    },
                    "id": 4056,
                    "indexExpression": {
                      "id": 4055,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4044,
                      "src": "3696:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3636",
                        "typeString": "contract ERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3682:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                      "typeString": "struct FlywheelCore.RewardsState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3654:51:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    },
                    "id": 4061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4058,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4053,
                        "src": "3720:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                          "typeString": "struct FlywheelCore.RewardsState memory"
                        }
                      },
                      "id": 4059,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4325,
                      "src": "3720:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3735:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3720:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4064,
                  "nodeType": "IfStatement",
                  "src": "3716:30:9",
                  "trueBody": {
                    "expression": {
                      "hexValue": "30",
                      "id": 4062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3745:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "functionReturnParameters": 4050,
                    "id": 4063,
                    "nodeType": "Return",
                    "src": "3738:8:9"
                  }
                },
                {
                  "expression": {
                    "id": 4070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4065,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4053,
                      "src": "3757:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4067,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4044,
                          "src": "3780:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 4068,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4053,
                          "src": "3790:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        ],
                        "id": 4066,
                        "name": "accrueStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4438,
                        "src": "3765:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_memory_ptr_$returns$_t_struct$_RewardsState_$4329_memory_ptr_$",
                          "typeString": "function (contract ERC20,struct FlywheelCore.RewardsState memory) returns (struct FlywheelCore.RewardsState memory)"
                        }
                      },
                      "id": 4069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3765:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "src": "3757:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                      "typeString": "struct FlywheelCore.RewardsState memory"
                    }
                  },
                  "id": 4071,
                  "nodeType": "ExpressionStatement",
                  "src": "3757:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4073,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4044,
                        "src": "3824:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 4074,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4046,
                        "src": "3834:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4075,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4053,
                        "src": "3840:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                          "typeString": "struct FlywheelCore.RewardsState memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                          "typeString": "struct FlywheelCore.RewardsState memory"
                        }
                      ],
                      "id": 4072,
                      "name": "accrueUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4543,
                      "src": "3813:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_struct$_RewardsState_$4329_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,address,struct FlywheelCore.RewardsState memory) returns (uint256)"
                      }
                    },
                    "id": 4076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3813:33:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4050,
                  "id": 4077,
                  "nodeType": "Return",
                  "src": "3806:40:9"
                }
              ]
            },
            "documentation": {
              "id": 4041,
              "nodeType": "StructuredDocumentation",
              "src": "3309:259:9",
              "text": "@notice accrue rewards for a single user on a strategy\n@param strategy the strategy to accrue a user's rewards on\n@param user the user to be accrued\n@return the cumulative amount of rewards accrued to user (including prior)"
            },
            "functionSelector": "b9be44ac",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accrue",
            "nameLocation": "3582:6:9",
            "parameters": {
              "id": 4047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4044,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "3595:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "3589:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4043,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4042,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "3589:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "3589:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4046,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3613:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "3605:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3605:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3588:30:9"
            },
            "returnParameters": {
              "id": 4050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4079,
                  "src": "3635:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3634:9:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4130,
            "nodeType": "FunctionDefinition",
            "src": "4277:387:9",
            "body": {
              "id": 4129,
              "nodeType": "Block",
              "src": "4407:257:9",
              "statements": [
                {
                  "assignments": [
                    4096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4096,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "4437:5:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4129,
                      "src": "4417:25:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState"
                      },
                      "typeName": {
                        "id": 4095,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4094,
                          "name": "RewardsState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 4329,
                          "src": "4417:12:9"
                        },
                        "referencedDeclaration": 4329,
                        "src": "4417:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                          "typeString": "struct FlywheelCore.RewardsState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4100,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4097,
                      "name": "strategyState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4340,
                      "src": "4445:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                        "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState storage ref)"
                      }
                    },
                    "id": 4099,
                    "indexExpression": {
                      "id": 4098,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4083,
                      "src": "4459:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3636",
                        "typeString": "contract ERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4445:23:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                      "typeString": "struct FlywheelCore.RewardsState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4417:51:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    },
                    "id": 4104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4101,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4096,
                        "src": "4483:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                          "typeString": "struct FlywheelCore.RewardsState memory"
                        }
                      },
                      "id": 4102,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "index",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4325,
                      "src": "4483:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4498:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4483:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4109,
                  "nodeType": "IfStatement",
                  "src": "4479:35:9",
                  "trueBody": {
                    "expression": {
                      "components": [
                        {
                          "hexValue": "30",
                          "id": 4105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4509:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "hexValue": "30",
                          "id": 4106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4512:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "id": 4107,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4508:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                        "typeString": "tuple(int_const 0,int_const 0)"
                      }
                    },
                    "functionReturnParameters": 4093,
                    "id": 4108,
                    "nodeType": "Return",
                    "src": "4501:13:9"
                  }
                },
                {
                  "expression": {
                    "id": 4115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4110,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4096,
                      "src": "4525:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4112,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4083,
                          "src": "4548:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 4113,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4096,
                          "src": "4558:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        ],
                        "id": 4111,
                        "name": "accrueStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4438,
                        "src": "4533:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_memory_ptr_$returns$_t_struct$_RewardsState_$4329_memory_ptr_$",
                          "typeString": "function (contract ERC20,struct FlywheelCore.RewardsState memory) returns (struct FlywheelCore.RewardsState memory)"
                        }
                      },
                      "id": 4114,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4533:31:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "src": "4525:39:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                      "typeString": "struct FlywheelCore.RewardsState memory"
                    }
                  },
                  "id": 4116,
                  "nodeType": "ExpressionStatement",
                  "src": "4525:39:9"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 4118,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4083,
                            "src": "4593:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "id": 4119,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4085,
                            "src": "4603:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4120,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4096,
                            "src": "4609:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          ],
                          "id": 4117,
                          "name": "accrueUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4543,
                          "src": "4582:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_struct$_RewardsState_$4329_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address,struct FlywheelCore.RewardsState memory) returns (uint256)"
                          }
                        },
                        "id": 4121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4582:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4123,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4083,
                            "src": "4628:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            }
                          },
                          {
                            "id": 4124,
                            "name": "secondUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4087,
                            "src": "4638:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4125,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4096,
                            "src": "4650:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          ],
                          "id": 4122,
                          "name": "accrueUser",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4543,
                          "src": "4617:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_struct$_RewardsState_$4329_memory_ptr_$returns$_t_uint256_$",
                            "typeString": "function (contract ERC20,address,struct FlywheelCore.RewardsState memory) returns (uint256)"
                          }
                        },
                        "id": 4126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4617:39:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 4127,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4581:76:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 4093,
                  "id": 4128,
                  "nodeType": "Return",
                  "src": "4574:83:9"
                }
              ]
            },
            "documentation": {
              "id": 4080,
              "nodeType": "StructuredDocumentation",
              "src": "3859:413:9",
              "text": "@notice accrue rewards for a two users on a strategy\n@param strategy the strategy to accrue a user's rewards on\n@param user the first user to be accrued\n@param user the second user to be accrued\n@return the cumulative amount of rewards accrued to the first user (including prior)\n@return the cumulative amount of rewards accrued to the second user (including prior)"
            },
            "functionSelector": "cc6bc101",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accrue",
            "nameLocation": "4286:6:9",
            "parameters": {
              "id": 4088,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4083,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4308:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4130,
                  "src": "4302:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4082,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4081,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "4302:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "4302:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4085,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4334:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4130,
                  "src": "4326:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4326:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4087,
                  "mutability": "mutable",
                  "name": "secondUser",
                  "nameLocation": "4356:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4130,
                  "src": "4348:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4292:80:9"
            },
            "returnParameters": {
              "id": 4093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4130,
                  "src": "4389:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4389:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4130,
                  "src": "4398:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4398:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4388:18:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 4170,
            "nodeType": "FunctionDefinition",
            "src": "4848:308:9",
            "body": {
              "id": 4169,
              "nodeType": "Block",
              "src": "4893:263:9",
              "statements": [
                {
                  "assignments": [
                    4137
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4137,
                      "mutability": "mutable",
                      "name": "accrued",
                      "nameLocation": "4911:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4169,
                      "src": "4903:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4136,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4903:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4141,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4138,
                      "name": "rewardsAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4040,
                      "src": "4921:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4140,
                    "indexExpression": {
                      "id": 4139,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4133,
                      "src": "4936:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4921:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4903:38:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4142,
                      "name": "accrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "4956:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4967:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4956:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4168,
                  "nodeType": "IfStatement",
                  "src": "4952:198:9",
                  "trueBody": {
                    "id": 4167,
                    "nodeType": "Block",
                    "src": "4970:180:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 4149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4145,
                              "name": "rewardsAccrued",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4040,
                              "src": "4984:14:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 4147,
                            "indexExpression": {
                              "id": 4146,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4133,
                              "src": "4999:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4984:20:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 4148,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5007:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4984:24:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4150,
                        "nodeType": "ExpressionStatement",
                        "src": "4984:24:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4156,
                                  "name": "flywheelRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3978,
                                  "src": "5060:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                ],
                                "id": 4155,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "5052:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4154,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "5052:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4157,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5052:24:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4158,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4133,
                              "src": "5078:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4159,
                              "name": "accrued",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4137,
                              "src": "5084:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4151,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3969,
                              "src": "5023:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3636",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3899,
                            "src": "5023:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$3636_$",
                              "typeString": "function (contract ERC20,address,address,uint256)"
                            }
                          },
                          "id": 4160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5023:69:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4161,
                        "nodeType": "ExpressionStatement",
                        "src": "5023:69:9"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 4163,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4133,
                              "src": "5125:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4164,
                              "name": "accrued",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4137,
                              "src": "5131:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4162,
                            "name": "ClaimRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4035,
                            "src": "5112:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 4165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5112:27:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4166,
                        "nodeType": "EmitStatement",
                        "src": "5107:32:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4131,
              "nodeType": "StructuredDocumentation",
              "src": "4670:173:9",
              "text": "@notice claim rewards for a given user\n@param user the user claiming rewards\n@dev this function is public, and all rewards transfer to the user"
            },
            "functionSelector": "ef5cfb8c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimRewards",
            "nameLocation": "4857:12:9",
            "parameters": {
              "id": 4134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4133,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4878:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4170,
                  "src": "4870:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4870:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4869:14:9"
            },
            "returnParameters": {
              "id": 4135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4893:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4175,
            "nodeType": "EventDefinition",
            "src": "5480:47:9",
            "anonymous": false,
            "documentation": {
              "id": 4171,
              "nodeType": "StructuredDocumentation",
              "src": "5340:135:9",
              "text": "@notice Emitted when a new strategy is added to flywheel by the admin\n@param newStrategy the new added strategy"
            },
            "name": "AddStrategy",
            "nameLocation": "5486:11:9",
            "parameters": {
              "id": 4174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4173,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newStrategy",
                  "nameLocation": "5514:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4175,
                  "src": "5498:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4172,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5498:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5497:29:9"
            }
          },
          {
            "id": 4189,
            "nodeType": "FunctionDefinition",
            "src": "5575:118:9",
            "body": {
              "id": 4188,
              "nodeType": "Block",
              "src": "5644:49:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4185,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4179,
                        "src": "5677:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 4184,
                      "name": "_addStrategyForRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4231,
                      "src": "5654:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$returns$__$",
                        "typeString": "function (contract ERC20)"
                      }
                    },
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4187,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:32:9"
                }
              ]
            },
            "documentation": {
              "id": 4176,
              "nodeType": "StructuredDocumentation",
              "src": "5533:37:9",
              "text": "@notice initialize a new strategy"
            },
            "functionSelector": "715cad16",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4182,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4181,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2343,
                  "src": "5631:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "5631:12:9"
              }
            ],
            "name": "addStrategyForRewards",
            "nameLocation": "5584:21:9",
            "parameters": {
              "id": 4180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4179,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5612:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "5606:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4178,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4177,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "5606:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "5606:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5605:16:9"
            },
            "returnParameters": {
              "id": 4183,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5644:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4231,
            "nodeType": "FunctionDefinition",
            "src": "5699:329:9",
            "body": {
              "id": 4230,
              "nodeType": "Block",
              "src": "5756:272:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        },
                        "id": 4201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 4196,
                              "name": "strategyState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4340,
                              "src": "5774:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                                "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState storage ref)"
                              }
                            },
                            "id": 4198,
                            "indexExpression": {
                              "id": 4197,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4192,
                              "src": "5788:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3636",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5774:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                              "typeString": "struct FlywheelCore.RewardsState storage ref"
                            }
                          },
                          "id": 4199,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4325,
                          "src": "5774:29:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5807:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5774:34:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7374726174656779",
                        "id": 4202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5810:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        },
                        "value": "strategy"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e16920893711b985df3893d85b39127b3a481e91c3c57640cd8970c06e9e6007",
                          "typeString": "literal_string \"strategy\""
                        }
                      ],
                      "id": 4195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5766:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5766:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4204,
                  "nodeType": "ExpressionStatement",
                  "src": "5766:55:9"
                },
                {
                  "expression": {
                    "id": 4215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4205,
                        "name": "strategyState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4340,
                        "src": "5831:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                          "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState storage ref)"
                        }
                      },
                      "id": 4207,
                      "indexExpression": {
                        "id": 4206,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4192,
                        "src": "5845:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5831:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                        "typeString": "struct FlywheelCore.RewardsState storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 4209,
                          "name": "ONE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4333,
                          "src": "5878:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "expression": {
                                "id": 4210,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5905:5:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 4211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5905:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeCastTo32",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3823,
                            "src": "5905:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256) pure returns (uint32)"
                            }
                          },
                          "id": 4213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5905:30:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 4208,
                        "name": "RewardsState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4329,
                        "src": "5857:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RewardsState_$4329_storage_ptr_$",
                          "typeString": "type(struct FlywheelCore.RewardsState storage pointer)"
                        }
                      },
                      "id": 4214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "index",
                        "lastUpdatedTimestamp"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5857:80:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "src": "5831:106:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                      "typeString": "struct FlywheelCore.RewardsState storage ref"
                    }
                  },
                  "id": 4216,
                  "nodeType": "ExpressionStatement",
                  "src": "5831:106:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4220,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4192,
                        "src": "5967:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "expression": {
                        "id": 4217,
                        "name": "allStrategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3974,
                        "src": "5948:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_storage",
                          "typeString": "contract ERC20[] storage ref"
                        }
                      },
                      "id": 4219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "5948:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_ERC20_$3636_$dyn_storage_ptr_$_t_contract$_ERC20_$3636_$returns$__$bound_to$_t_array$_t_contract$_ERC20_$3636_$dyn_storage_ptr_$",
                        "typeString": "function (contract ERC20[] storage pointer,contract ERC20)"
                      }
                    },
                    "id": 4221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5948:28:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4222,
                  "nodeType": "ExpressionStatement",
                  "src": "5948:28:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4226,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4192,
                            "src": "6011:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20_$3636",
                              "typeString": "contract ERC20"
                            }
                          ],
                          "id": 4225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6003:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4224,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6003:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6003:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4223,
                      "name": "AddStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4175,
                      "src": "5991:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5991:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4229,
                  "nodeType": "EmitStatement",
                  "src": "5986:35:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addStrategyForRewards",
            "nameLocation": "5708:22:9",
            "parameters": {
              "id": 4193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4192,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5737:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4231,
                  "src": "5731:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4191,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4190,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "5731:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "5731:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5730:16:9"
            },
            "returnParameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5756:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 4241,
            "nodeType": "FunctionDefinition",
            "src": "6034:104:9",
            "body": {
              "id": 4240,
              "nodeType": "Block",
              "src": "6101:37:9",
              "statements": [
                {
                  "expression": {
                    "id": 4238,
                    "name": "allStrategies",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3974,
                    "src": "6118:13:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_storage",
                      "typeString": "contract ERC20[] storage ref"
                    }
                  },
                  "functionReturnParameters": 4237,
                  "id": 4239,
                  "nodeType": "Return",
                  "src": "6111:20:9"
                }
              ]
            },
            "functionSelector": "c3b28864",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllStrategies",
            "nameLocation": "6043:16:9",
            "parameters": {
              "id": 4232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6059:2:9"
            },
            "returnParameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4236,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4241,
                  "src": "6085:14:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_memory_ptr",
                    "typeString": "contract ERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 4234,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 4233,
                        "name": "ERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 3636,
                        "src": "6085:5:9"
                      },
                      "referencedDeclaration": 3636,
                      "src": "6085:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$3636",
                        "typeString": "contract ERC20"
                      }
                    },
                    "id": 4235,
                    "nodeType": "ArrayTypeName",
                    "src": "6085:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ERC20_$3636_$dyn_storage_ptr",
                      "typeString": "contract ERC20[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6084:16:9"
            },
            "scope": 4544,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4246,
            "nodeType": "EventDefinition",
            "src": "6269:64:9",
            "anonymous": false,
            "documentation": {
              "id": 4242,
              "nodeType": "StructuredDocumentation",
              "src": "6144:120:9",
              "text": "@notice Emitted when the rewards module changes\n@param newFlywheelRewards the new rewards module"
            },
            "name": "FlywheelRewardsUpdate",
            "nameLocation": "6275:21:9",
            "parameters": {
              "id": 4245,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4244,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newFlywheelRewards",
                  "nameLocation": "6313:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4246,
                  "src": "6297:34:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6297:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6296:36:9"
            }
          },
          {
            "id": 4296,
            "nodeType": "FunctionDefinition",
            "src": "6394:452:9",
            "body": {
              "id": 4295,
              "nodeType": "Block",
              "src": "6481:365:9",
              "statements": [
                {
                  "assignments": [
                    4256
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4256,
                      "mutability": "mutable",
                      "name": "oldRewardBalance",
                      "nameLocation": "6499:16:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4295,
                      "src": "6491:24:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4255,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6491:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4264,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4261,
                            "name": "flywheelRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3978,
                            "src": "6548:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                              "typeString": "contract IFlywheelRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                              "typeString": "contract IFlywheelRewards"
                            }
                          ],
                          "id": 4260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6540:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4259,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6540:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6540:24:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 4257,
                        "name": "rewardToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3969,
                        "src": "6518:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4258,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3279,
                      "src": "6518:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 4263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6518:47:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6491:74:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4265,
                      "name": "oldRewardBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4256,
                      "src": "6579:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6598:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6579:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4283,
                  "nodeType": "IfStatement",
                  "src": "6575:152:9",
                  "trueBody": {
                    "id": 4282,
                    "nodeType": "Block",
                    "src": "6601:126:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 4273,
                                  "name": "flywheelRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3978,
                                  "src": "6652:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                ],
                                "id": 4272,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6644:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4271,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6644:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6644:24:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4277,
                                  "name": "newFlywheelRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4250,
                                  "src": "6678:18:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                                    "typeString": "contract IFlywheelRewards"
                                  }
                                ],
                                "id": 4276,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6670:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4275,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6670:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6670:27:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 4279,
                              "name": "oldRewardBalance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4256,
                              "src": "6699:16:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 4268,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3969,
                              "src": "6615:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3636",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 4270,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3899,
                            "src": "6615:28:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20_$3636_$",
                              "typeString": "function (contract ERC20,address,address,uint256)"
                            }
                          },
                          "id": 4280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6615:101:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4281,
                        "nodeType": "ExpressionStatement",
                        "src": "6615:101:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 4286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4284,
                      "name": "flywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3978,
                      "src": "6737:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                        "typeString": "contract IFlywheelRewards"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4285,
                      "name": "newFlywheelRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4250,
                      "src": "6755:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                        "typeString": "contract IFlywheelRewards"
                      }
                    },
                    "src": "6737:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                      "typeString": "contract IFlywheelRewards"
                    }
                  },
                  "id": 4287,
                  "nodeType": "ExpressionStatement",
                  "src": "6737:36:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4291,
                            "name": "newFlywheelRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4250,
                            "src": "6819:18:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                              "typeString": "contract IFlywheelRewards"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                              "typeString": "contract IFlywheelRewards"
                            }
                          ],
                          "id": 4290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6811:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4289,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6811:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6811:27:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4288,
                      "name": "FlywheelRewardsUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4246,
                      "src": "6789:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6789:50:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4294,
                  "nodeType": "EmitStatement",
                  "src": "6784:55:9"
                }
              ]
            },
            "documentation": {
              "id": 4247,
              "nodeType": "StructuredDocumentation",
              "src": "6339:50:9",
              "text": "@notice swap out the flywheel rewards contract"
            },
            "functionSelector": "8fb00913",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4253,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4252,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2343,
                  "src": "6468:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "6468:12:9"
              }
            ],
            "name": "setFlywheelRewards",
            "nameLocation": "6403:18:9",
            "parameters": {
              "id": 4251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4250,
                  "mutability": "mutable",
                  "name": "newFlywheelRewards",
                  "nameLocation": "6439:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4296,
                  "src": "6422:35:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                    "typeString": "contract IFlywheelRewards"
                  },
                  "typeName": {
                    "id": 4249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4248,
                      "name": "IFlywheelRewards",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4610,
                      "src": "6422:16:9"
                    },
                    "referencedDeclaration": 4610,
                    "src": "6422:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                      "typeString": "contract IFlywheelRewards"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6421:37:9"
            },
            "returnParameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6481:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4301,
            "nodeType": "EventDefinition",
            "src": "6969:56:9",
            "anonymous": false,
            "documentation": {
              "id": 4297,
              "nodeType": "StructuredDocumentation",
              "src": "6852:112:9",
              "text": "@notice Emitted when the booster module changes\n@param newBooster the new booster module"
            },
            "name": "FlywheelBoosterUpdate",
            "nameLocation": "6975:21:9",
            "parameters": {
              "id": 4300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4299,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "newBooster",
                  "nameLocation": "7013:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4301,
                  "src": "6997:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4298,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6997:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6996:28:9"
            }
          },
          {
            "id": 4322,
            "nodeType": "FunctionDefinition",
            "src": "7086:174:9",
            "body": {
              "id": 4321,
              "nodeType": "Block",
              "src": "7157:103:9",
              "statements": [
                {
                  "expression": {
                    "id": 4312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4310,
                      "name": "flywheelBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3982,
                      "src": "7167:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                        "typeString": "contract IFlywheelBooster"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4311,
                      "name": "newBooster",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4305,
                      "src": "7185:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                        "typeString": "contract IFlywheelBooster"
                      }
                    },
                    "src": "7167:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                      "typeString": "contract IFlywheelBooster"
                    }
                  },
                  "id": 4313,
                  "nodeType": "ExpressionStatement",
                  "src": "7167:28:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4317,
                            "name": "newBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4305,
                            "src": "7241:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                              "typeString": "contract IFlywheelBooster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                              "typeString": "contract IFlywheelBooster"
                            }
                          ],
                          "id": 4316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7233:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4315,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7233:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7233:19:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4314,
                      "name": "FlywheelBoosterUpdate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4301,
                      "src": "7211:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 4319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7211:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4320,
                  "nodeType": "EmitStatement",
                  "src": "7206:47:9"
                }
              ]
            },
            "documentation": {
              "id": 4302,
              "nodeType": "StructuredDocumentation",
              "src": "7031:50:9",
              "text": "@notice swap out the flywheel booster contract"
            },
            "functionSelector": "5a826df3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4307,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2343,
                  "src": "7144:12:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "7144:12:9"
              }
            ],
            "name": "setBooster",
            "nameLocation": "7095:10:9",
            "parameters": {
              "id": 4306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4305,
                  "mutability": "mutable",
                  "name": "newBooster",
                  "nameLocation": "7123:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4322,
                  "src": "7106:27:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                    "typeString": "contract IFlywheelBooster"
                  },
                  "typeName": {
                    "id": 4304,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4303,
                      "name": "IFlywheelBooster",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4577,
                      "src": "7106:16:9"
                    },
                    "referencedDeclaration": 4577,
                    "src": "7106:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                      "typeString": "contract IFlywheelBooster"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7105:29:9"
            },
            "returnParameters": {
              "id": 4309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7157:0:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 4329,
            "nodeType": "StructDefinition",
            "src": "7452:205:9",
            "canonicalName": "FlywheelCore.RewardsState",
            "members": [
              {
                "constant": false,
                "id": 4325,
                "mutability": "mutable",
                "name": "index",
                "nameLocation": "7544:5:9",
                "nodeType": "VariableDeclaration",
                "scope": 4329,
                "src": "7536:13:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint224",
                  "typeString": "uint224"
                },
                "typeName": {
                  "id": 4324,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "7536:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 4328,
                "mutability": "mutable",
                "name": "lastUpdatedTimestamp",
                "nameLocation": "7630:20:9",
                "nodeType": "VariableDeclaration",
                "scope": 4329,
                "src": "7623:27:9",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 4327,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "7623:6:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RewardsState",
            "nameLocation": "7459:12:9",
            "scope": 4544,
            "visibility": "public"
          },
          {
            "id": 4333,
            "nodeType": "VariableDeclaration",
            "src": "7714:34:9",
            "constant": true,
            "documentation": {
              "id": 4330,
              "nodeType": "StructuredDocumentation",
              "src": "7663:46:9",
              "text": "@notice the fixed point factor of flywheel"
            },
            "functionSelector": "c2ee3a08",
            "mutability": "constant",
            "name": "ONE",
            "nameLocation": "7738:3:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint224",
              "typeString": "uint224"
            },
            "typeName": {
              "id": 4331,
              "name": "uint224",
              "nodeType": "ElementaryTypeName",
              "src": "7714:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint224",
                "typeString": "uint224"
              }
            },
            "value": {
              "hexValue": "31653138",
              "id": 4332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "7744:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                "typeString": "int_const 1000000000000000000"
              },
              "value": "1e18"
            },
            "visibility": "public"
          },
          {
            "id": 4340,
            "nodeType": "VariableDeclaration",
            "src": "7820:51:9",
            "constant": false,
            "documentation": {
              "id": 4334,
              "nodeType": "StructuredDocumentation",
              "src": "7755:60:9",
              "text": "@notice The strategy index and last updated per strategy"
            },
            "functionSelector": "dde684a5",
            "mutability": "mutable",
            "name": "strategyState",
            "nameLocation": "7858:13:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
              "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState)"
            },
            "typeName": {
              "id": 4339,
              "keyType": {
                "id": 4336,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4335,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3636,
                  "src": "7828:5:9"
                },
                "referencedDeclaration": 3636,
                "src": "7828:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$3636",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "7820:30:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState)"
              },
              "valueType": {
                "id": 4338,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4337,
                  "name": "RewardsState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4329,
                  "src": "7837:12:9"
                },
                "referencedDeclaration": 4329,
                "src": "7837:12:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                  "typeString": "struct FlywheelCore.RewardsState"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4348,
            "nodeType": "VariableDeclaration",
            "src": "7918:62:9",
            "constant": false,
            "documentation": {
              "id": 4341,
              "nodeType": "StructuredDocumentation",
              "src": "7878:35:9",
              "text": "@notice user index per strategy"
            },
            "functionSelector": "116139d3",
            "mutability": "mutable",
            "name": "userIndex",
            "nameLocation": "7971:9:9",
            "scope": 4544,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_mapping$_t_address_$_t_uint224_$_$",
              "typeString": "mapping(contract ERC20 => mapping(address => uint224))"
            },
            "typeName": {
              "id": 4347,
              "keyType": {
                "id": 4343,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 4342,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3636,
                  "src": "7926:5:9"
                },
                "referencedDeclaration": 3636,
                "src": "7926:5:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$3636",
                  "typeString": "contract ERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "7918:45:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_mapping$_t_address_$_t_uint224_$_$",
                "typeString": "mapping(contract ERC20 => mapping(address => uint224))"
              },
              "valueType": {
                "id": 4346,
                "keyType": {
                  "id": 4344,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "7943:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "7935:27:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint224_$",
                  "typeString": "mapping(address => uint224)"
                },
                "valueType": {
                  "id": 4345,
                  "name": "uint224",
                  "nodeType": "ElementaryTypeName",
                  "src": "7954:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint224",
                    "typeString": "uint224"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 4438,
            "nodeType": "FunctionDefinition",
            "src": "8043:1127:9",
            "body": {
              "id": 4437,
              "nodeType": "Block",
              "src": "8181:989:9",
              "statements": [
                {
                  "assignments": [
                    4362
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4362,
                      "mutability": "mutable",
                      "name": "strategyRewardsAccrued",
                      "nameLocation": "8251:22:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4437,
                      "src": "8243:30:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8243:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4369,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4365,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4352,
                        "src": "8310:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "expression": {
                          "id": 4366,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4355,
                          "src": "8320:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        },
                        "id": 4367,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastUpdatedTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4328,
                        "src": "8320:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 4363,
                        "name": "flywheelRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3978,
                        "src": "8276:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFlywheelRewards_$4610",
                          "typeString": "contract IFlywheelRewards"
                        }
                      },
                      "id": 4364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAccruedRewards",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4595,
                      "src": "8276:33:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$3636_$_t_uint32_$returns$_t_uint256_$",
                        "typeString": "function (contract ERC20,uint32) external returns (uint256)"
                      }
                    },
                    "id": 4368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8276:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8243:104:9"
                },
                {
                  "expression": {
                    "id": 4372,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4370,
                      "name": "rewardsState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4359,
                      "src": "8358:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4371,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4355,
                      "src": "8373:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "src": "8358:20:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                      "typeString": "struct FlywheelCore.RewardsState memory"
                    }
                  },
                  "id": 4373,
                  "nodeType": "ExpressionStatement",
                  "src": "8358:20:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4374,
                      "name": "strategyRewardsAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4362,
                      "src": "8392:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8417:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8392:26:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4436,
                  "nodeType": "IfStatement",
                  "src": "8388:776:9",
                  "trueBody": {
                    "id": 4435,
                    "nodeType": "Block",
                    "src": "8420:744:9",
                    "statements": [
                      {
                        "assignments": [
                          4378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4378,
                            "mutability": "mutable",
                            "name": "supplyTokens",
                            "nameLocation": "8527:12:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 4435,
                            "src": "8519:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8519:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4396,
                        "initialValue": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 4387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 4381,
                                  "name": "flywheelBooster",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3982,
                                  "src": "8550:15:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                                    "typeString": "contract IFlywheelBooster"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                                    "typeString": "contract IFlywheelBooster"
                                  }
                                ],
                                "id": 4380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8542:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4379,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8542:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8542:24:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 4385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8578:1:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 4384,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8570:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 4383,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8570:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 4386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8570:10:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "8542:38:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 4392,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4352,
                                "src": "8662:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$3636",
                                  "typeString": "contract ERC20"
                                }
                              },
                              "id": 4393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "totalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3275,
                              "src": "8662:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 4394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8662:22:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "8542:142:9",
                          "trueExpression": {
                            "arguments": [
                              {
                                "id": 4390,
                                "name": "strategy",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4352,
                                "src": "8634:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ERC20_$3636",
                                  "typeString": "contract ERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ERC20_$3636",
                                  "typeString": "contract ERC20"
                                }
                              ],
                              "expression": {
                                "id": 4388,
                                "name": "flywheelBooster",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3982,
                                "src": "8599:15:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                                  "typeString": "contract IFlywheelBooster"
                                }
                              },
                              "id": 4389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "boostedTotalSupply",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 4565,
                              "src": "8599:34:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$3636_$returns$_t_uint256_$",
                                "typeString": "function (contract ERC20) view external returns (uint256)"
                              }
                            },
                            "id": 4391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8599:44:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8519:165:9"
                      },
                      {
                        "assignments": [
                          4398
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4398,
                            "mutability": "mutable",
                            "name": "deltaIndex",
                            "nameLocation": "8707:10:9",
                            "nodeType": "VariableDeclaration",
                            "scope": 4435,
                            "src": "8699:18:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            },
                            "typeName": {
                              "id": 4397,
                              "name": "uint224",
                              "nodeType": "ElementaryTypeName",
                              "src": "8699:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 4399,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8699:18:9"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4400,
                            "name": "supplyTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4378,
                            "src": "8736:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 4401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8752:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "8736:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 4415,
                        "nodeType": "IfStatement",
                        "src": "8732:99:9",
                        "trueBody": {
                          "expression": {
                            "id": 4413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 4403,
                              "name": "deltaIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4398,
                              "src": "8755:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 4409,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 4406,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 4404,
                                              "name": "strategyRewardsAccrued",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4362,
                                              "src": "8770:22:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 4405,
                                              "name": "ONE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 4333,
                                              "src": "8795:3:9",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint224",
                                                "typeString": "uint224"
                                              }
                                            },
                                            "src": "8770:28:9",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 4407,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "8769:30:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 4408,
                                        "name": "supplyTokens",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4378,
                                        "src": "8802:12:9",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "8769:45:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 4410,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "8768:47:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4411,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "safeCastTo224",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3685,
                                "src": "8768:61:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint224_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (uint224)"
                                }
                              },
                              "id": 4412,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8768:63:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            },
                            "src": "8755:76:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "id": 4414,
                          "nodeType": "ExpressionStatement",
                          "src": "8755:76:9"
                        }
                      },
                      {
                        "expression": {
                          "id": 4427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4416,
                            "name": "rewardsState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "8939:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                },
                                "id": 4421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 4418,
                                    "name": "state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4355,
                                    "src": "8992:5:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                                      "typeString": "struct FlywheelCore.RewardsState memory"
                                    }
                                  },
                                  "id": 4419,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "index",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 4325,
                                  "src": "8992:11:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 4420,
                                  "name": "deltaIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4398,
                                  "src": "9006:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                },
                                "src": "8992:24:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "expression": {
                                      "id": 4422,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "9056:5:9",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 4423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "9056:15:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 4424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeCastTo32",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3823,
                                  "src": "9056:28:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint32_$bound_to$_t_uint256_$",
                                    "typeString": "function (uint256) pure returns (uint32)"
                                  }
                                },
                                "id": 4425,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9056:30:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              ],
                              "id": 4417,
                              "name": "RewardsState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4329,
                              "src": "8954:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_RewardsState_$4329_storage_ptr_$",
                                "typeString": "type(struct FlywheelCore.RewardsState storage pointer)"
                              }
                            },
                            "id": 4426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "index",
                              "lastUpdatedTimestamp"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "8954:147:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          },
                          "src": "8939:162:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                            "typeString": "struct FlywheelCore.RewardsState memory"
                          }
                        },
                        "id": 4428,
                        "nodeType": "ExpressionStatement",
                        "src": "8939:162:9"
                      },
                      {
                        "expression": {
                          "id": 4433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4429,
                              "name": "strategyState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4340,
                              "src": "9115:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_struct$_RewardsState_$4329_storage_$",
                                "typeString": "mapping(contract ERC20 => struct FlywheelCore.RewardsState storage ref)"
                              }
                            },
                            "id": 4431,
                            "indexExpression": {
                              "id": 4430,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4352,
                              "src": "9129:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$3636",
                                "typeString": "contract ERC20"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9115:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                              "typeString": "struct FlywheelCore.RewardsState storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4432,
                            "name": "rewardsState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4359,
                            "src": "9141:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                              "typeString": "struct FlywheelCore.RewardsState memory"
                            }
                          },
                          "src": "9115:38:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_RewardsState_$4329_storage",
                            "typeString": "struct FlywheelCore.RewardsState storage ref"
                          }
                        },
                        "id": 4434,
                        "nodeType": "ExpressionStatement",
                        "src": "9115:38:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4349,
              "nodeType": "StructuredDocumentation",
              "src": "7987:51:9",
              "text": "@notice accumulate global rewards on a strategy"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accrueStrategy",
            "nameLocation": "8052:14:9",
            "parameters": {
              "id": 4356,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4352,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "8073:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4438,
                  "src": "8067:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4351,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4350,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "8067:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "8067:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4355,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "8103:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4438,
                  "src": "8083:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                    "typeString": "struct FlywheelCore.RewardsState"
                  },
                  "typeName": {
                    "id": 4354,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4353,
                      "name": "RewardsState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4329,
                      "src": "8083:12:9"
                    },
                    "referencedDeclaration": 4329,
                    "src": "8083:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                      "typeString": "struct FlywheelCore.RewardsState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8066:43:9"
            },
            "returnParameters": {
              "id": 4360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4359,
                  "mutability": "mutable",
                  "name": "rewardsState",
                  "nameLocation": "8163:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4438,
                  "src": "8143:32:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                    "typeString": "struct FlywheelCore.RewardsState"
                  },
                  "typeName": {
                    "id": 4358,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4357,
                      "name": "RewardsState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4329,
                      "src": "8143:12:9"
                    },
                    "referencedDeclaration": 4329,
                    "src": "8143:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                      "typeString": "struct FlywheelCore.RewardsState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8142:34:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 4543,
            "nodeType": "FunctionDefinition",
            "src": "9245:1357:9",
            "body": {
              "id": 4542,
              "nodeType": "Block",
              "src": "9378:1224:9",
              "statements": [
                {
                  "assignments": [
                    4453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4453,
                      "mutability": "mutable",
                      "name": "strategyIndex",
                      "nameLocation": "9420:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "9412:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 4452,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "9412:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4456,
                  "initialValue": {
                    "expression": {
                      "id": 4454,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4447,
                      "src": "9436:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                        "typeString": "struct FlywheelCore.RewardsState memory"
                      }
                    },
                    "id": 4455,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "index",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 4325,
                    "src": "9436:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9412:35:9"
                },
                {
                  "assignments": [
                    4458
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4458,
                      "mutability": "mutable",
                      "name": "supplierIndex",
                      "nameLocation": "9465:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "9457:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 4457,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "9457:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4464,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4459,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4348,
                        "src": "9481:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_mapping$_t_address_$_t_uint224_$_$",
                          "typeString": "mapping(contract ERC20 => mapping(address => uint224))"
                        }
                      },
                      "id": 4461,
                      "indexExpression": {
                        "id": 4460,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4442,
                        "src": "9491:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9481:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint224_$",
                        "typeString": "mapping(address => uint224)"
                      }
                    },
                    "id": 4463,
                    "indexExpression": {
                      "id": 4462,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4444,
                      "src": "9501:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9481:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9457:49:9"
                },
                {
                  "expression": {
                    "id": 4471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4465,
                          "name": "userIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4348,
                          "src": "9554:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_ERC20_$3636_$_t_mapping$_t_address_$_t_uint224_$_$",
                            "typeString": "mapping(contract ERC20 => mapping(address => uint224))"
                          }
                        },
                        "id": 4468,
                        "indexExpression": {
                          "id": 4466,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4442,
                          "src": "9564:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9554:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint224_$",
                          "typeString": "mapping(address => uint224)"
                        }
                      },
                      "id": 4469,
                      "indexExpression": {
                        "id": 4467,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4444,
                        "src": "9574:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9554:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4470,
                      "name": "strategyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "9582:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "9554:41:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "id": 4472,
                  "nodeType": "ExpressionStatement",
                  "src": "9554:41:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    },
                    "id": 4475,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4473,
                      "name": "supplierIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4458,
                      "src": "9808:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9825:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9808:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4481,
                  "nodeType": "IfStatement",
                  "src": "9804:68:9",
                  "trueBody": {
                    "id": 4480,
                    "nodeType": "Block",
                    "src": "9828:44:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 4478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4476,
                            "name": "supplierIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4458,
                            "src": "9842:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4477,
                            "name": "ONE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4333,
                            "src": "9858:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "9842:19:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint224",
                            "typeString": "uint224"
                          }
                        },
                        "id": 4479,
                        "nodeType": "ExpressionStatement",
                        "src": "9842:19:9"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4483
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4483,
                      "mutability": "mutable",
                      "name": "deltaIndex",
                      "nameLocation": "9890:10:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "9882:18:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 4482,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "9882:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4487,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    },
                    "id": 4486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4484,
                      "name": "strategyIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4453,
                      "src": "9903:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 4485,
                      "name": "supplierIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4458,
                      "src": "9919:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "9903:29:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint224",
                      "typeString": "uint224"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9882:50:9"
                },
                {
                  "assignments": [
                    4489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4489,
                      "mutability": "mutable",
                      "name": "supplierTokens",
                      "nameLocation": "10033:14:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "10025:22:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10025:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4509,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 4498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 4492,
                            "name": "flywheelBooster",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3982,
                            "src": "10058:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                              "typeString": "contract IFlywheelBooster"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                              "typeString": "contract IFlywheelBooster"
                            }
                          ],
                          "id": 4491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10050:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10050:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10050:24:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10086:1:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10078:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4494,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10078:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10078:10:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "10050:38:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "id": 4506,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4444,
                          "src": "10185:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 4504,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4442,
                          "src": "10166:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 4505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3279,
                        "src": "10166:18:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 4507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10166:24:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 4508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10050:140:9",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 4501,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4442,
                          "src": "10136:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          }
                        },
                        {
                          "id": 4502,
                          "name": "user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4444,
                          "src": "10146:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$3636",
                            "typeString": "contract ERC20"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 4499,
                          "name": "flywheelBooster",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3982,
                          "src": "10103:15:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IFlywheelBooster_$4577",
                            "typeString": "contract IFlywheelBooster"
                          }
                        },
                        "id": 4500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "boostedBalanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4576,
                        "src": "10103:32:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_contract$_ERC20_$3636_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (contract ERC20,address) view external returns (uint256)"
                        }
                      },
                      "id": 4503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10103:48:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10025:165:9"
                },
                {
                  "assignments": [
                    4511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4511,
                      "mutability": "mutable",
                      "name": "supplierDelta",
                      "nameLocation": "10315:13:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "10307:21:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10307:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4518,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4512,
                            "name": "supplierTokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4489,
                            "src": "10332:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 4513,
                            "name": "deltaIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4483,
                            "src": "10349:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint224",
                              "typeString": "uint224"
                            }
                          },
                          "src": "10332:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 4515,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10331:29:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 4516,
                      "name": "ONE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4333,
                      "src": "10363:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      }
                    },
                    "src": "10331:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10307:59:9"
                },
                {
                  "assignments": [
                    4520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4520,
                      "mutability": "mutable",
                      "name": "supplierAccrued",
                      "nameLocation": "10384:15:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 4542,
                      "src": "10376:23:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4519,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10376:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4526,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 4521,
                        "name": "rewardsAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "10402:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4523,
                      "indexExpression": {
                        "id": 4522,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4444,
                        "src": "10417:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10402:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 4524,
                      "name": "supplierDelta",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4511,
                      "src": "10425:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10402:36:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10376:62:9"
                },
                {
                  "expression": {
                    "id": 4531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4527,
                        "name": "rewardsAccrued",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4040,
                        "src": "10449:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4529,
                      "indexExpression": {
                        "id": 4528,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4444,
                        "src": "10464:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10449:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4530,
                      "name": "supplierAccrued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4520,
                      "src": "10472:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10449:38:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4532,
                  "nodeType": "ExpressionStatement",
                  "src": "10449:38:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4534,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4442,
                        "src": "10517:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        }
                      },
                      {
                        "id": 4535,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4444,
                        "src": "10527:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4536,
                        "name": "supplierDelta",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4511,
                        "src": "10533:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4537,
                        "name": "strategyIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4453,
                        "src": "10548:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$3636",
                          "typeString": "contract ERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      ],
                      "id": 4533,
                      "name": "AccrueRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4028,
                      "src": "10503:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_ERC20_$3636_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256,uint256)"
                      }
                    },
                    "id": 4538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10503:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4539,
                  "nodeType": "EmitStatement",
                  "src": "10498:64:9"
                },
                {
                  "expression": {
                    "id": 4540,
                    "name": "supplierAccrued",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4520,
                    "src": "10580:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4451,
                  "id": 4541,
                  "nodeType": "Return",
                  "src": "10573:22:9"
                }
              ]
            },
            "documentation": {
              "id": 4439,
              "nodeType": "StructuredDocumentation",
              "src": "9176:64:9",
              "text": "@notice accumulate rewards on a strategy for a specific user"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "accrueUser",
            "nameLocation": "9254:10:9",
            "parameters": {
              "id": 4448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4442,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "9280:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4543,
                  "src": "9274:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$3636",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 4441,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4440,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3636,
                      "src": "9274:5:9"
                    },
                    "referencedDeclaration": 3636,
                    "src": "9274:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$3636",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4444,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "9306:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4543,
                  "src": "9298:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9298:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4447,
                  "mutability": "mutable",
                  "name": "state",
                  "nameLocation": "9340:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 4543,
                  "src": "9320:25:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RewardsState_$4329_memory_ptr",
                    "typeString": "struct FlywheelCore.RewardsState"
                  },
                  "typeName": {
                    "id": 4446,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 4445,
                      "name": "RewardsState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 4329,
                      "src": "9320:12:9"
                    },
                    "referencedDeclaration": 4329,
                    "src": "9320:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RewardsState_$4329_storage_ptr",
                      "typeString": "struct FlywheelCore.RewardsState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9264:87:9"
            },
            "returnParameters": {
              "id": 4451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4450,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4543,
                  "src": "9369:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4449,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9369:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9368:9:9"
            },
            "scope": 4544,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3957,
              "name": "Auth",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2438,
              "src": "1496:4:9"
            },
            "id": 3958,
            "nodeType": "InheritanceSpecifier",
            "src": "1496:4:9"
          }
        ],
        "canonicalName": "FlywheelCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3956,
          "nodeType": "StructuredDocumentation",
          "src": "434:1036:9",
          "text": "@title Flywheel Core Incentives Manager\n@notice Flywheel is a general framework for managing token incentives.\nIt takes reward streams to various *strategies* such as staking LP tokens and divides them among *users* of those strategies.\nThe Core contract maintaings three important pieces of state:\n the rewards index which determines how many rewards are owed per token per strategy. User indexes track how far behind the strategy they are to lazily calculate all catch-up rewards.\n the accrued (unclaimed) rewards per user.\n references to the booster and rewards module described below.\nCore does not manage any tokens directly. The rewards module maintains token balances, and approves core to pull transfer them to users when they claim.\nSECURITY NOTE: For maximum accuracy and to avoid exploits, rewards accrual should be notified atomically through the accrue hook. \nAccrue should be called any time tokens are transferred, minted, or burned."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          4544,
          2438
        ],
        "name": "FlywheelCore",
        "nameLocation": "1480:12:9",
        "scope": 4545,
        "usedErrors": []
      }
    ],
    "license": "AGPL-3.0-only"
  }
}